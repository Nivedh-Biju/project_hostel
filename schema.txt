-- table Student: roll_no(primary key), name, phone_no, family_contact_no, address, sex, password
-- 
-- table Admin: id(primary key), name, phone_no, address
-- 
-- table Leave_records: record_id(primary key), roll_no(reference to Student roll_no), start_date, end_date, reason, status, application_date, admin_id(reference to id of Admin)
-- 
-- table Complaints: roll_no(references Srudent roll_no), complaint_id(primary key), application_date, resolve_date, complaint_date
-- 
-- table Hostel_Rooms: hostel_name(composite primary key), room_no(composite_primary_key), capacity
-- 
-- table Allotted_rooms: hostel_name(composite primary key), room_no(composite_primary_key), roll_no (references Student roll_no)
-- 
-- table Guest_rooms: guest_room(primary key), rate, type
-- 
-- table Guest_house_request: occupant_name, phone_no, start_date, end_date, type, status, request_date
-- 
-- table Allotted_guest_house: guest_room(primary key), occupant_name, phone_no, start_date, end_date, transaction_id, amount_paid, status, admin_id(references Admin id)




-- Creating table Student
CREATE TABLE Student (
    roll_no VARCHAR(20) PRIMARY KEY,
    name VARCHAR(255),
    phone_no VARCHAR(15),
    family_contact_no VARCHAR(15),
    address VARCHAR(255),
    sex CHAR(1),
    passwd VARCHAR(255)  -- Changed column name to "passwd"
);

-- Creating table Admin
CREATE TABLE Admin (
    id VARCHAR(20) PRIMARY KEY,
    name VARCHAR(255),
    phone_no VARCHAR(15),
    address VARCHAR(255),
    passwd VARCHAR(255)  -- Changed column name to "passwd"
);

-- Creating table Leave_records
CREATE TABLE Leave_records (
    record_id SERIAL PRIMARY KEY,
    roll_no VARCHAR(20) REFERENCES Student(roll_no),
    start_date DATE,
    end_date DATE,
    reason VARCHAR(255),
    status VARCHAR(50),
    application_date DATE,
    admin_id VARCHAR(20) REFERENCES Admin(id)
);

-- Creating table Complaints
CREATE TABLE Complaints (
    roll_no VARCHAR(20) REFERENCES Student(roll_no),
    complaint_id SERIAL PRIMARY KEY,
    application_date DATE,
    resolve_date DATE,
    complaint_date DATE
);

-- Creating table Hostel_Rooms
CREATE TABLE Hostel_Rooms (
    hostel_name VARCHAR(255),
    room_no INT,
    capacity INT,
    PRIMARY KEY (hostel_name, room_no)
);

-- Creating table Allotted_rooms
CREATE TABLE Allotted_rooms (
    hostel_name VARCHAR(255),
    room_no INT,
    roll_no VARCHAR(20) REFERENCES Student(roll_no),
    PRIMARY KEY (hostel_name, room_no),
    FOREIGN KEY (hostel_name, room_no) REFERENCES Hostel_Rooms(hostel_name, room_no)
);

-- Creating table Guest_rooms
CREATE TABLE Guest_rooms (
    guest_room SERIAL PRIMARY KEY,
    rate DECIMAL(10, 2),
    type VARCHAR(50)
);

-- Creating table Guest_house_request
CREATE TABLE Guest_house_request (
    occupant_name VARCHAR(255),
    phone_no VARCHAR(15),
    start_date DATE,
    end_date DATE,
    transaction_id SERIAL,
    amount_paid DECIMAL(10, 2)
);

-- Creating table Alloted_guest_house
CREATE TABLE Alloted_guest_house (
    guest_room INT REFERENCES Guest_rooms(guest_room),
    occupant_name VARCHAR(255),
    phone_no VARCHAR(15),
    start_date DATE,
    end_date DATE,
    transaction_id BIGSERIAL,
    amount_paid DECIMAL(10, 2),
    status VARCHAR(50),
    admin_id VARCHAR(20) REFERENCES Admin(id),
    PRIMARY KEY (guest_room)
);

alter table alloted_guest_house
rename to allotted_guest_house;


ALTER TABLE Complaints
ADD COLUMN description TEXT;


-- Drop the complaint_date column
ALTER TABLE Complaints DROP COLUMN complaint_date;

-- Add a new column complaint_type
ALTER TABLE Complaints ADD COLUMN complaint_type VARCHAR(255);

-- Insert login details in student table
INSERT INTO Student (roll_no, name, phone_no, family_contact_no, address, sex, passwd) VALUES
('cs22b1043', 'Ishank', '1234567890', '0987654321', '123 Main St', 'M', 'cs22b1043'),
('cs22b1033', 'Satvik', '2345678901', '1234567890', '456 Oak St', 'M', 'cs22b1033'),
('cs22b1022', 'Ravi', '3456789012', '2345678901', '789 Pine St', 'M', 'cs22b1022'),
('cs22b1011', 'Anjali', '4567890123', '3456789012', '101 Maple St', 'F', 'cs22b1011'),
('cs22b1000', 'Neha', '5678901234', '4567890123', '202 Birch St', 'F', 'cs22b1000');


alter table Guest_house_request
drop column transaction_id,
drop column amount_paid;

alter table Guest_house_request
add column type VARCHAR(50);

alter table Guest_house_request
add column status VARCHAR(50);

alter table guest_house_request
add column request_date DATE;


-- insert data into admin table
INSERT INTO Admin (id, name, phone_no, address, passwd) VALUES
('admin1', 'Ishank', '5678901234', '123 Main St', 'admin1pass'),
('admin2', 'Amit', '6789012345', '456 Oak St', 'admin2pass'),
('admin3', 'Suman', '7890123456', '789 Pine St', 'admin3pass'),
('admin4', 'Raj', '8901234567', '101 Maple St', 'admin4pass'),
('admin5', 'Priya', '9012345678', '202 Birch St', 'admin5pass');



-- Insert data into guest_rooms table
INSERT INTO guest_rooms (guest_room, rate, type) VALUES
(101, 1500.00, 'ac+bathroom'),
(102, 1500.00, 'ac+bathroom'),
(103, 1500.00, 'ac+bathroom'),
(104, 1500.00, 'ac+bathroom'),
(105, 1500.00, 'ac+bathroom'),

(106, 1000.00, 'ac'),
(107, 1000.00, 'ac'),
(108, 1000.00, 'ac'),
(109, 1000.00, 'ac'),
(110, 1000.00, 'ac'),

(111, 600.00, 'non-ac'),
(112, 600.00, 'non-ac'),
(113, 600.00, 'non-ac'),
(114, 600.00, 'non-ac'),
(115, 600.00, 'non-ac');


alter table allotted_rooms                                                                                     
drop constraint "allotted_rooms_pkey";

alter table allotted_rooms
add primary key (roll_no);


--A trigger to make sure a room's capacity is respected
CREATE FUNCTION validate_room_allocation() RETURNS TRIGGER AS $$
BEGIN
  DECLARE cap INTEGER;
BEGIN
  SELECT capacity
  INTO cap
  FROM hostel_rooms
  WHERE hostel_name = NEW.hostel_name AND room_no = NEW.room_no;

  -- Check if inserting exceeds capacity
  IF NOT FOUND THEN
    RAISE EXCEPTION 'Room (%, %) not found in hostel_rooms table!', NEW.hostel_name, NEW.room_no;
  ELSIF (SELECT COUNT(*) FROM allotted_rooms
          WHERE hostel_name = NEW.hostel_name AND room_no = NEW.room_no) >= cap THEN
    RAISE EXCEPTION 'Room (%, %) capacity exceeded!', NEW.hostel_name, NEW.room_no;
  END IF;
END;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER enforce_room_capacity
BEFORE INSERT ON allotted_rooms
FOR EACH ROW
EXECUTE PROCEDURE validate_room_allocation();


-- insert data into leave_records
INSERT INTO Leave_records (roll_no, start_date, end_date, reason, status, application_date, admin_id) VALUES
('cs22b1043', '2024-06-01', '2024-06-07', 'Medical leave', 'Pending', '2024-05-01', 'admin1'),
('cs22b1033', '2024-07-01', '2024-07-15', 'Family function', 'Approved', '2024-06-01', 'admin2'),
('cs22b1022', '2024-08-01', '2024-08-05', 'Conference', 'Disapproved', '2024-07-01', 'admin3'),
('cs22b1011', '2024-09-01', '2024-09-10', 'Vacation', 'Pending', '2024-08-01', 'admin4'),
('cs22b1000', '2024-10-01', '2024-10-20', 'Research trip', 'Approved', '2024-09-01', 'admin5');


-- insert data into complaints
INSERT INTO Complaints (roll_no, application_date, resolve_date, description, complaint_type) VALUES
('cs22b1043', '2024-05-01', '2024-05-10', 'Leaking faucet in bathroom', 'Maintenance'),
('cs22b1033', '2024-06-01', NULL, 'Broken window in room', 'Maintenance'),
('cs22b1022', '2024-07-01', '2024-07-05', 'Noise disturbance', 'Discipline'),
('cs22b1011', '2024-08-01', NULL, 'Wi-Fi not working', 'IT'),
('cs22b1000', '2024-09-01', '2024-09-10', 'Room cleaning', 'Housekeeping');


-- insert data into hostel_rooms
-- Insert data into Hostel_Rooms table
INSERT INTO Hostel_Rooms (hostel_name, room_no, capacity) VALUES
('ashwatha', 101, 2),
('ashwatha', 102, 3),
('ashwatha', 103, 2),
('ashwatha', 104, 4),
('ashwatha', 105, 2),

('jasmine', 201, 3),
('jasmine', 202, 4),
('jasmine', 203, 2),
('jasmine', 204, 3),
('jasmine', 205, 4),

('jasmine_annex', 301, 2),
('jasmine_annex', 302, 3),
('jasmine_annex', 303, 2),
('jasmine_annex', 304, 4),
('jasmine_annex', 305, 3),

('ashoka', 401, 2),
('ashoka', 402, 3),
('ashoka', 403, 4),
('ashoka', 404, 2),
('ashoka', 405, 3),

('banayan', 501, 4),
('banayan', 502, 3),
('banayan', 503, 2),
('banayan', 504, 4),
('banayan', 505, 3),

('lotus', 601, 2),
('lotus', 602, 3),
('lotus', 603, 4),
('lotus', 604, 2),
('lotus', 605, 3);


-- insert data in guest_house_request
INSERT INTO Guest_house_request (occupant_name, phone_no, start_date, end_date, type, status, request_date) VALUES
('John Doe', '1234567890', '2024-06-01', '2024-06-05', 'ac+bathroom', 'pending', '2024-05-01'),
('Jane Smith', '2345678901', '2024-07-01', '2024-07-03', 'ac', 'approved', '2024-06-01'),
('Alice Johnson', '3456789012', '2024-08-01', '2024-08-10', 'non-ac', 'rejected', '2024-07-01'),
('Bob Brown', '4567890123', '2024-09-01', '2024-09-02', 'ac+bathroom', 'pending', '2024-08-01'),
('Charlie Davis', '5678901234', '2024-10-01', '2024-10-07', 'ac', 'approved', '2024-09-01');

